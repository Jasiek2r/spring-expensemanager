services:
  spring-config:
    image: spring-config
    restart: always
    ports:
      - "8086:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://spring-eureka:8080/eureka
    networks:
      - expense_manager_net
    depends_on:
      spring-eureka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://spring-config:8080"]
      interval: 5s
      retries: 10
      start_period: 10s
      timeout: 10s
  spring-eureka:
    image: spring-eureka
    restart: always
    environment:
      SERVER_PORT: 8080
    ports:
      - "8761:8080"
    networks:
      - expense_manager_net
    healthcheck:
      test: ["CMD", "curl", "http://spring-eureka:8080"]
      interval: 5s
      retries: 10
      start_period: 10s
      timeout: 10s
    
  spring-expensemanager-elements:
    image: spring-expensemanager-elements
    restart: always
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://spring-config:8080"
      EUREKA_INSTANCE_ID: "1"
      
    ports:
      - "8080:8080"
    depends_on:
      spring-eureka:
        condition: service_healthy
      spring-config:
        condition: service_healthy
    networks:
      - expense_manager_net
    healthcheck:
      test: ["CMD", "curl", "http://spring-expensemanager-elements:8080/api/expense-manager/events/handle-initialization-event"]
      interval: 10s
      retries: 4
      start_period: 30s
      timeout: 30s

  spring-expensemanager-categories:
    image: spring-expensemanager-categories
    restart: always
    environment:
      EUREKA_INSTANCE_INSTANCE_ID: "2"
      SPRING_CONFIG_IMPORT: "configserver:http://spring-config:8080"
    ports:
      - "8081:8080"
    depends_on:
      spring-expensemanager-elements:
        condition: service_healthy
      spring-eureka:
        condition: service_healthy
      spring-config:
        condition: service_healthy
    networks:
      - expense_manager_net

  spring-expensemanager-ui:
    image: spring-expensemanager-ui
    restart: always
    environment:
      API_URL: "http://spring-expensemanager-gateway:8080/categories"
    ports:
      - "8082:80"
    networks:
      - expense_manager_net
    depends_on:
      spring-expensemanager-gateway:
        condition: service_started
      spring-config:
        condition: service_healthy

  spring-expensemanager-gateway:
    image: spring-expensemanager-gateway
    restart: always
    environment:
      CATEGORY_MANAGEMENT_URL: "http://spring-expensemanager-categories:8080"
      EXPENSE_MANAGEMENT_URL: "http://spring-expensemanager-elements:8080"
    ports:
      - "8083:8080"
    networks:
      - expense_manager_net
    depends_on:
      spring-eureka:
        condition: service_healthy
      spring-config:
        condition: service_healthy
  db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_DB: expense-manager
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - expense_manager_net
    ports:
      - "5432:5432"
  db2:
    image: postgres:latest
    container_name: postgres-db2
    environment:
      POSTGRES_DB: category-manager
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init2.sql
    networks:
      - expense_manager_net
    ports:
      - "5433:5432"

networks:
  expense_manager_net:
    driver: bridge

volumes:
  db_data:
    driver: local
